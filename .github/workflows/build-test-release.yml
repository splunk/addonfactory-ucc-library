# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - "github-action-migration"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
jobs: 
  compliance-dependencies:
    name: Compliance Dependencies
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: ort-action
        uses: splunk/addonfactory-ort-action@v1
        id: ort-action
        with:
          WorkDir: .
          UsePython3: "3.7"        
      - name: ort-action-artifacts-reports
        uses: actions/upload-artifact@v2
        with:
          name: analysis-reports
          path: |
            .ort/reports/*
        if: always()
      - name: ort-action-artifacts-analyzer
        uses: actions/upload-artifact@v2
        with:
          name: analysis-analyzer
          path: |
            .ort/analyzer/*
        if: always()

  compliance-copyrights:
    name: Compliance Copyright Headers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check License Header
        uses: apache/skywalking-eyes@main # always prefer to use a revision instead of `main`.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # needed only when you want License-Eye to comment on the pull request.

  lint:
    runs-on: ubuntu-latest
    name: quality-lint
    steps:
      - uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
      - name: quality-lint
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_EXCLUDE: README.md

  semgrep:
    runs-on: ubuntu-latest
    name: security-sast-semgrep
    steps:
      - uses: actions/checkout@v2
      - name: Semgrep
        id: semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          publishDeployment: ${{ secrets.SEMGREP_DEPLOYMENT_ID }}
          publishToken: ${{ secrets.SEMGREP_PUBLISH_TOKEN }}

  snyk:
    name: security-vuln-snyk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: snyk/actions/setup@master
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.13"
      - name: Snyk monitor
        run: snyk test --sarif-file-output=snyk-scan_requirements.sarif --all-projects --print-deps --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - uses: actions/upload-artifact@v2
        if: always() 
        with:
          name: snyk-results
          path: snyk-scan_requirements.sarif

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - compliance-dependencies
    steps:
      - uses: actions/checkout@v2
        with:
          # Very Important semantic-release won't trigger a tagged
          # build if this is not set false
          persist-credentials: false
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install Poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
      - name: Build
        run: |
          # shellcheck disable=SC1090
          source "$HOME/.poetry/env"
          poetry build
      - uses: actions/upload-artifact@v2
        if: always() 
        with:
          name: Package
          path: dist/
          
  publish:
    if: always()
    needs:
      - compliance-dependencies
      - compliance-copyrights
      - lint
      - semgrep
      - snyk
      - build
    runs-on: ubuntu-latest
    steps:
      - name: exit without publish if PR
        if: github.event_name == 'pull_request'
        run: |
        exit 1
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: false
          persist-credentials: false
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2.5.4
        with:
          semantic_version: 17
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/git
            @google/semantic-release-replace-plugin
        env:
          GITHUB_TOKEN: ${{ secrets.SEMREL_TOKEN }}
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
  update-semver:
    name: Move Respository semver tags
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: haya14busa/action-update-semver@v1